/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const GenerateLazyImport = createFileRoute('/generate')()
const CallbackLazyImport = createFileRoute('/callback')()
const AppLazyImport = createFileRoute('/app')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const GenerateLazyRoute = GenerateLazyImport.update({
  path: '/generate',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/generate.lazy').then((d) => d.Route))

const CallbackLazyRoute = CallbackLazyImport.update({
  path: '/callback',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/callback.lazy').then((d) => d.Route))

const AppLazyRoute = AppLazyImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/app.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLazyImport
      parentRoute: typeof rootRoute
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackLazyImport
      parentRoute: typeof rootRoute
    }
    '/generate': {
      id: '/generate'
      path: '/generate'
      fullPath: '/generate'
      preLoaderRoute: typeof GenerateLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AppLazyRoute,
  CallbackLazyRoute,
  GenerateLazyRoute,
  LoginLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/callback",
        "/generate",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/app": {
      "filePath": "app.lazy.tsx"
    },
    "/callback": {
      "filePath": "callback.lazy.tsx"
    },
    "/generate": {
      "filePath": "generate.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
